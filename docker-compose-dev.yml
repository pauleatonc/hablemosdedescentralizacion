version: '3.8'

services:
  # In REAL production this db should be an RDS instance, this is for a production-like environment
  db:
    image: postgres:14
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    # Alternatives: use volume or bind mount
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # - ./data/db:/var/lib/postgresql/data
    networks:
      - default

  # Django app
  web:
    build: .
    command: bash -c "python manage.py migrate && gunicorn hablemosdedescentralizacion.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      #- .:/app
      - ./staticfiles:/staticfiles
    networks:
      - default
    # dont expose ports in production, unless you are testing conectivity
    # ports:
      # - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    # The only required settings on this part should be DJANGO_SETTINGS_MODULE, all the others can be loaded in the .env file
    environment:
      - DJANGO_SETTINGS_MODULE=hablemosdedescentralizacion.settings.prod

  # This proxy is used to route between the app and the static files (and serve them). Could be others alternatives to explore.
  proxy:
    image: nginx
    depends_on:
      - web
    environment:
      - VIRTUAL_HOST=qahablemosdedescentralizacion.subdere.gob.cl
    networks:
      - frontend
      - default
    # dont expose ports in production, we use autodiscovery with the VIRTUAL_HOST env variable
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/home/app/web/staticfiles

volumes:
  postgres_data:
networks:
  frontend:
  default:
