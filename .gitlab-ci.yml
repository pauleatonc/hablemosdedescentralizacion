image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

stages:
  - build
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  - export $(grep -v '^#' .env | xargs)  # Cargar las variables del archivo .env

build:
  stage: build
  script:
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - dev
    - main

deploy_dev:
  stage: deploy
  script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEV_REMOTE_HOST >> ~/.ssh/known_hosts
    - scp docker-compose-dev.yml $DEV_REMOTE_USER@$DEV_REMOTE_HOST:/path/to/deploy/
    - ssh $DEV_REMOTE_USER@$DEV_REMOTE_HOST "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && cd /path/to/deploy && docker-compose -f docker-compose-dev.yml up -d"
  only:
    - dev

deploy_prod:
  stage: deploy
  script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $PROD_REMOTE_HOST >> ~/.ssh/known_hosts
    - scp docker-compose-prod.yml $PROD_REMOTE_USER@$PROD_REMOTE_HOST:/path/to/deploy/
    - ssh $PROD_REMOTE_USER@$PROD_REMOTE_HOST "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && cd /path/to/deploy && docker-compose -f docker-compose-prod.yml up -d"
  only:
    - main

variables:
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
  DEV_REMOTE_HOST: $DEV_REMOTE_HOST
  DEV_REMOTE_USER: $DEV_REMOTE_USER
  PROD_REMOTE_HOST: $PROD_REMOTE_HOST
  PROD_REMOTE_USER: $PROD_REMOTE_USER
  CI_REGISTRY_USER: $CI_REGISTRY_USER
  CI_REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD
  CI_REGISTRY: $CI_REGISTRY